[{"D:\\UPB\\fraunhofercode\\front-end\\src\\index.js":"1","D:\\UPB\\fraunhofercode\\front-end\\src\\reportWebVitals.js":"2","D:\\UPB\\fraunhofercode\\front-end\\src\\App.js":"3","D:\\UPB\\fraunhofercode\\front-end\\src\\components\\ListStudentComponent.jsx":"4","D:\\UPB\\fraunhofercode\\front-end\\src\\services\\StudentService.js":"5","D:\\UPB\\fraunhofercode\\front-end\\src\\components\\HeaderComponent.jsx":"6","D:\\UPB\\fraunhofercode\\front-end\\src\\components\\FooterComponent.jsx":"7","D:\\UPB\\fraunhofercode\\front-end\\src\\components\\CreateStudentComponent.jsx":"8","D:\\UPB\\fraunhofercode\\front-end\\src\\components\\UpdateStudentComponent.jsx":"9"},{"size":547,"mtime":1607182989814,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1607156790108,"results":"12","hashOfConfig":"11"},{"size":1122,"mtime":1607182989810,"results":"13","hashOfConfig":"11"},{"size":3455,"mtime":1607183278143,"results":"14","hashOfConfig":"11"},{"size":702,"mtime":1607182989814,"results":"15","hashOfConfig":"11"},{"size":551,"mtime":1607182989812,"results":"16","hashOfConfig":"11"},{"size":420,"mtime":1607182989812,"results":"17","hashOfConfig":"11"},{"size":5229,"mtime":1607182989811,"results":"18","hashOfConfig":"11"},{"size":5725,"mtime":1607182989813,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1bytyy2",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"27"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"27"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"D:\\UPB\\fraunhofercode\\front-end\\src\\index.js",[],"D:\\UPB\\fraunhofercode\\front-end\\src\\reportWebVitals.js",[],"D:\\UPB\\fraunhofercode\\front-end\\src\\App.js",["42"],"import React, { Component } from \"react\";\nimport { Container, Table } from \"reactstrap\";\n\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {students: []};\n  }\n\n  componentDidMount(){\n    \n     fetch(\"/students\", {\n      headers: {\n\t\t\t  \"Access-Control-Allow-Origin\": \"http://localhost:8080\",\n\t\t\t  \"Accept\": \"application/json\",\n\t\t\t  \"Content-Type\": \"application/json\"\n\t\t\t}\n     }).then(response =>\n      response\n        .json()\n        .then(data => this.setState({students: data}))\n    );\n    const r = 4;\n  }\n\n  render(){\n    const Students = this.state.students;\n\n    if (Students == undefined) {\n      return <p>Failed to load data.</p>;\n    }\n    const StudentList = Students.map(Student => {\n      return (\n        <tr scope=\"row\">\n          <td>{Student.firstName}</td>\n          <td>{Student.lastName}</td>\n          <td>{Student.matriculationNumber}</td>\n        </tr>\n      );\n    });\n\n    return (\n      <div>\n        <Container fluid>\n        <Table>\n      <thead>\n        <tr>\n          <th>First Name</th>\n          <th>Last Name</th>\n          <th>Mtr. Number</th>\n        </tr>\n      </thead>\n      <tbody>{StudentList}</tbody>\n    </Table>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n",["43","44"],"D:\\UPB\\fraunhofercode\\front-end\\src\\components\\ListStudentComponent.jsx",["45","46","47","48"],"D:\\UPB\\fraunhofercode\\front-end\\src\\services\\StudentService.js",[],"D:\\UPB\\fraunhofercode\\front-end\\src\\components\\HeaderComponent.jsx",["49"],"import React, { Component } from 'react';\r\n\r\nclass HeaderComponent extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <header>\r\n                    <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\r\n                        <div>\r\n                            <a href = \"#\">Student Service App - Coding Test - Fraunhofer IEM Paderborn</a>\r\n                        </div>\r\n                    </nav>\r\n                </header>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HeaderComponent;","D:\\UPB\\fraunhofercode\\front-end\\src\\components\\FooterComponent.jsx",[],"D:\\UPB\\fraunhofercode\\front-end\\src\\components\\CreateStudentComponent.jsx",["50"],"import React, { Component, useDebugValue } from 'react';\r\nimport StudentService from '../services/StudentService';\r\n\r\nclass CreateStudentComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            firstName : '',\r\n            lastName : '',\r\n            matriculationNumber: '',\r\n            address: ''\r\n        }\r\n\r\n        this.changeFirstNameHandler = this.changeFirstNameHandler.bind(this);\r\n        this.changeLastNameHandler = this.changeLastNameHandler.bind(this);\r\n        this.changeAddressHandler = this.changeAddressHandler.bind(this);\r\n        this.changeMatriculationNumberHandler = this.changeMatriculationNumberHandler.bind(this);\r\n        this.saveStudent = this.saveStudent.bind(this);\r\n    }\r\n    \r\n    saveStudent= (e) =>{\r\n        e.preventDefault();\r\n\r\n        let student = {firstName: this.state.firstName, lastName: this.state.lastName, matriculationNumber: this.state.matriculationNumber, address: this.state.address};\r\n        console.log('student => ' + JSON.stringify(student));\r\n\r\n        StudentService.createStudent(student).then(res => {\r\n            this.props.history.push('./students');\r\n        });\r\n    }\r\n    changeFirstNameHandler= (event) => {\r\n        this.setState({firstName: event.target.value});\r\n    }\r\n    \r\n    changeLastNameHandler= (event) => {\r\n        this.setState({lastName: event.target.value});\r\n    }\r\n\r\n    changeAddressHandler= (event) => {\r\n        this.setState({address: event.target.value});\r\n    }\r\n\r\n    changeMatriculationNumberHandler= (event) => {\r\n        this.setState({matriculationNumber: event.target.value});\r\n    }\r\n\r\n    cancel(){\r\n        this.props.history.push('./students');\r\n    }\r\n     \r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className = \"container\">\r\n                        <div className = \"row\">\r\n                            <div className = \"card col-md-6 offset-md-3 offset-md-3\">\r\n                                <h3 className = \"text-center\">\r\n                                    Add Student\r\n                                </h3>\r\n\r\n                                <div className = \"card-body\">\r\n                                    <form>\r\n                                        <div className=\"form-group\">\r\n                                            <label>\r\n                                                First Name: \r\n                                            </label>\r\n                                            <input placeholder = \"First Name\" name = \"firstName\" \r\n                                            className = \"form-control\" value = {this.state.firstName}\r\n                                            onChange = {this.changeFirstNameHandler}/>\r\n                                        </div>\r\n\r\n                                        <div className = \"form-group\">     \r\n                                            <label>\r\n                                                Last Name: \r\n                                            </label>\r\n                                            <input placeholder = \"Last Name\" name = \"lastName\" \r\n                                            className = \"form-control\" value = {this.state.lastName}\r\n                                            onChange = {this.changeLastNameHandler}/>\r\n                                        </div>    \r\n                                            \r\n                                        <div className = \"form-group\">\r\n                                            <label>\r\n                                                Matriculation Number: \r\n                                            </label>\r\n                                            <input placeholder = \"Matriculation Number\" name = \"matriculationNumber\" \r\n                                            className = \"form-control\" value = {this.state.matriculationNumber}\r\n                                            onChange = {this.changeMatriculationNumberHandler}/>\r\n                                        </div>\r\n\r\n                                        <div className = \"form-group\">\r\n                                            <label>\r\n                                                Address: \r\n                                            </label>\r\n                                            <input placeholder = \"Address\" name = \"address\" \r\n                                            className = \"form-control\" value = {this.state.address}\r\n                                            onChange = {this.changeAddressHandler}/>\r\n                                        </div>    \r\n                                        \r\n                                        <button className = \"btn btn-success\" onClick = {this.saveStudent}>Save</button>\r\n                                        <button className = \"btn btn-danger\" onClick = {this.cancel.bind(this)} style={{marginLeft: \"10px\"}}>Cancel</button>\r\n                                    </form>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreateStudentComponent;","D:\\UPB\\fraunhofercode\\front-end\\src\\components\\UpdateStudentComponent.jsx",[],{"ruleId":"51","severity":1,"message":"52","line":2,"column":8,"nodeType":"53","messageId":"54","endLine":2,"endColumn":12},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"51","severity":1,"message":"59","line":2,"column":10,"nodeType":"53","messageId":"54","endLine":2,"endColumn":19},{"ruleId":"51","severity":1,"message":"60","line":2,"column":21,"nodeType":"53","messageId":"54","endLine":2,"endColumn":26},{"ruleId":"61","severity":1,"message":"62","line":42,"column":22,"nodeType":"63","messageId":"64","endLine":42,"endColumn":24},{"ruleId":"65","severity":1,"message":"66","line":47,"column":17,"nodeType":"67","endLine":47,"endColumn":28},{"ruleId":"68","severity":1,"message":"69","line":10,"column":29,"nodeType":"70","endLine":10,"endColumn":43},{"ruleId":"51","severity":1,"message":"71","line":1,"column":28,"nodeType":"53","messageId":"54","endLine":1,"endColumn":41},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-native-reassign",["72"],"no-negated-in-lhs",["73"],"'Container' is defined but never used.","'Table' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/scope","The scope prop can only be used on <th> elements.","JSXAttribute","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useDebugValue' is defined but never used.","no-global-assign","no-unsafe-negation"]